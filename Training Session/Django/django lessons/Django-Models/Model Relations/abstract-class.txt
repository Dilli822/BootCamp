
-----------------------------Abstract-Class-------------------------


# models.py
# we create class called BaseModel and 
# wanted to know when the objects is created and updated
# for that we made attributes created_at and updated-at
# we donot want to make table of this class bcoz we want to use
# it as BaseModel so to do that we create class Meta.
# and put abstract = True.

class BaseModel(models.Model):
    created_at = models.DateTimeField()
    updated_at = models.DateTimeField()

    class Meta:
          abstract = True

# now we try to do makemigrations 
# it shows No changes detected why?
# bcoz we have made abstract = True which means Django will not care about the class BaseModel any more.

-----But How to use this BaseModel?------
# let's inherit the BaseModel to clas Information and make info ,bio attributes.

class BaseModel(models.Model):
    created_at = models.DateTimeField()
    updated_at = models.DateTimeField()

    class Meta:
          abstract = True


class Information(BaseModel):
    info = models.CharField()
    #bio = models.CharField() can be used textfield for larger field
    bio = models.TextField()

# makemigrations and check the migrations file of information

# migrations/0005.info_information.py

# Generated by Django 3.2.5 on 2021-08-10 03:39

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('modelrelation', '0004_auto_20210810_0259'),
    ]

    operations = [
        migrations.CreateModel(
            name='Information',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('info', models.CharField(max_length=100)),
                ('bio', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
    ]

# what we found is up there not only info and bio field is created but also creates_at and updated_at is also created.
# this shows that our basemodel is inherited to class Information.


# now migrate and refresh database there must be folder modelrelation_information which will have a table with rows id created_at , updated_at info and bio 

# in this we can work with basemodel for larger projects and our requirements.


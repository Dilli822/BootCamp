
#Path Converters
--> it converts the path dynamically 

1. str 
2. int 
3. slug
4. uuid 
5. path

# Good news: we can create our own path converters without any doubts.

--> we can make provision of allowing or not allowing the request
--> from url layer itself rather than doing from view layers


#Using regular expressions
--> we use regular expression for creating the custom urls
--> we use re_path instead of path
from django.urls import path, re_path

from. import views

urlpatterns = [
    path('articles/203', views.special_case_2003),
    re_path(r'^articles/(?P<year>[0-9]{4})/$', views,year_archive),
]

# Grouping URLs 
# or including the extra urls

from django.urls import include, path

from apps.main import views as main_views
from credit import views as credit_views

extra_patterns = [
    path('reports/', credit_views.report),
    path('reports/<int: id>/', credit_views.report),
    path('charge/', credit_views.charge),
]

urlpatterns = [
    path('', main_views.homepage),
    path('help/', include('apps.help.urls')),
    path('credit/', include(extra_patterns)),
]

# Sending extra patterns to url patterns using help keyword include
# our newly formed url will be credit/reports
# extra pattern credit/reports/init:id

# sub app have own urls
# we include all the apps and sub apps urls together 
# apps.help.urls we go to sub-app url
# including our pre made home url 
# include(world_patterns))
# we also add sub app or apps url to the main root


# What URLconf searches against or How does it works ?
 --> it doesnot care and makes no difference either it is 
 ---> GET or POST parameter or the domain name 
 ----> It will only look for any matchable URLs that are in root
 --> for example: https://example.com/helloworld/,
 ......URLconf willd direclty look for helloworld....
 ----without caring domain or request method------
 ---https://example.com/helloworld/?page=1,....
 ---then also django look after the helloworld url--
 ---all request methods will land on the same view function---
 ---we write logics in view layers(for sepcific like in helloworld view layer)
 ---- for handling types of request--
 






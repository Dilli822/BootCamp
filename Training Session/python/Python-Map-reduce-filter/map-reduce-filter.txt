

  # All of them takes two param function and iterals
  # map (func, iterals)
  # func is always first param and iterals is always second


 # use of filter
 # function is assigned to even variable
  >>> even = lambda x: x % 2 == 0

  # result will be printed out as 
  # filter only even with iterals 1,2....9
>>> result = filter(even, [1,2,3,4,5,6,7,8,9])
>>> print(result)
<filter object at 0x7f4035295ca0>

# in order to print out the sequence in list 
# we supply print list()
>>> print(list(result))
[2, 4, 6, 8]
# filtered the first function with the help of iterals
# filtering logics is used
# it gives filtering or distilized results of iterals
# example like if we have apple, banana , cherry we get slices 
# or varities of same source fruits 
# apple = apple juice 


# example of map functions
>>> sqr = lambda x: x**2
>>> map(sqr, [1, 2, 3, 4, 5, 6])
<map object at 0x7f403535d6a0>
>>> result = map(sqr, [1, 2, 3, 4, 5, 6])
>>> print(result)
<map object at 0x7f4035362430>
>>> print(list(result))
[1, 4, 9, 16, 25, 36]
# mapping logics is used as power 1.....6
#printed as list 
# it gives the mapping results of iterals which are pointed
# example like among the apples,bananas,oranges we only
# we only got oranges

# reduce function
>>> #importing package
>>> from functools import reduce
>>> mul = lambda x, y: x*y
>>> result = reduce(mul, range(2, 6))
>>> result
120
>>> # here are 2 * 3 * 4 * 5 = 120
# it gives the single result of iterals
# example among all the fruits orange,apple,banana
# we got complete juice by grinding it
